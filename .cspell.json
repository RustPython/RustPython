// See: https://github.com/streetsidesoftware/cspell/tree/master/packages/cspell
{
  "version": "0.2",
  // language - current active spelling language
  "language": "en",
  // dictionaries - list of the names of the dictionaries to use
  "dictionaries": [
    "en_US",
    "softwareTerms",
    "c",
    "cpp",
    "python",
    "python-custom",
    "rust",
    "unix",
    "posix",
    "winapi"
  ],
  // dictionaryDefinitions - this list defines any custom dictionaries to use
  "dictionaryDefinitions": [],
  "ignorePaths": [
    "**/__pycache__/**",
    "Lib/**"
  ],
  // words - list of words to be always considered correct
  "words": [
    // Rust
    "ahash",
    "bindgen",
    "bitflags",
    "chrono",
    "cstring",
    "flate2",
    "hasher",
    "idents",
    "indexmap",
    "insta",
    "keccak",
    "lalrpop",
    "libc",
    "Manually",
    "maplit",
    "memmap",
    "metas",
    "peekable",
    "prepended",
    "punct",
    "rustc",
    "rustfmt",
    "splitn",
    "trai",
    "unic",
    "unistd",
    // Python
    "abstractmethods",
    "aiter",
    "anext",
    "basicsize",
    "cformat",
    "classcell",
    "codepoint",
    "cpython",
    "defaultaction",
    "descr",
    "dictcomp",
    "docstring",
    "docstrings",
    "dunder",
    "eventmask",
    "fdel",
    "fileencoding",
    "finallyhandler",
    "fspath",
    "fstring",
    "fstrings",
    "genexpr",
    "getattro",
    "getformat",
    "getnewargs",
    "getweakrefcount",
    "getweakrefs",
    "idiv",
    "impls",
    "instancecheck",
    "instanceof",
    "itemsize",
    "iternext",
    "kwarg",
    "kwargs",
    "linearization",
    "linearize",
    "listcomp",
    "mappingproxy",
    "maxsplit",
    "MemoryView",
    "metaclass",
    "metaclasses",
    "metatype",
    "ndim",
    "nonbytes",
    "origname",
    "PYTHONDEBUG",
    "PYTHONHOME",
    "PYTHONINSPECT",
    "PYTHONOPTIMIZE",
    "PYTHONPATH",
    "PYTHONPATH",
    "PYTHONVERBOSE",
    "PYTHONWARNINGS",
    "qualname",
    "rdiv",
    "setattro",
    "setcomp",
    "stacklevel",
    "subclasscheck",
    "subclasshook",
    "unionable",
    "unraisablehook",
    "vararg",
    "varargs",
    "varnames",
    "warningregistry",
    "warnopts",
    "weakproxy",
    "xopts",
    // RustPython
    "baseclass",
    "Bytecode",
    "cfgs",
    "codegen",
    "dedentations",
    "dedents",
    "deduped",
    "downcasted",
    "dumpable",
    "GetSet",
    "internable",
    "makeunicodedata",
    "miri",
    "notrace",
    "pyarg",
    "pyarg",
    "pyargs",
    "PyAttr",
    "pyc",
    "PyClass",
    "PyClassMethod",
    "PyException",
    "PyFunction",
    "pygetset",
    "pyimpl",
    "pymember",
    "PyMethod",
    "PyModule",
    "pyname",
    "pyobj",
    "PyObject",
    "pypayload",
    "PyProperty",
    "pyref",
    "PyResult",
    "pyslot",
    "PyStaticMethod",
    "pystr",
    "pystruct",
    "pystructseq",
    "pytrace",
    "richcompare",
    "RustPython",
    "struc",
    "tracebacks",
    "typealiases",
    "Unconstructible",
    "unhashable",
    "uninit",
    "unraisable",
    "wasi",
    "zelf",
    // cpython
    "argtypes",
    "asdl",
    "asname",
    "augassign",
    "badsyntax",
    "basetype",
    "boolop",
    "bxor",
    "cellarg",
    "cellvar",
    "cellvars",
    "cmpop",
    "dictoffset",
    "elts",
    "excepthandler",
    "finalbody",
    "freevar",
    "freevars",
    "fromlist",
    "heaptype",
    "IMMUTABLETYPE",
    "kwonlyarg",
    "kwonlyargs",
    "linearise",
    "maxdepth",
    "mult",
    "nkwargs",
    "orelse",
    "patma",
    "posonlyarg",
    "posonlyargs",
    "prec",
    "stackdepth",
    "unaryop",
    "unparse",
    "unparser",
    "VARKEYWORDS",
    "varkwarg",
    "withitem",
    "withs"
  ],
  // flagWords - list of words to be always considered incorrect
  "flagWords": [
  ],
  "ignoreRegExpList": [
  ],
  // languageSettings - allow for per programming language configuration settings.
  "languageSettings": [
    {
      "languageId": "python",
      "locale": "en"
    }
  ]
}
