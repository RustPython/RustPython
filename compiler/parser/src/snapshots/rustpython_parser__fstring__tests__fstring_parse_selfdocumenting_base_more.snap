---
source: compiler/parser/src/fstring.rs
expression: parse_ast
---
[
    Located {
        location: Location {
            row: 0,
            column: 0,
        },
        end_location: Some(
            Location {
                row: 0,
                column: 0,
            },
        ),
        custom: (),
        node: Constant {
            value: Str(
                "mix ",
            ),
            kind: None,
        },
    },
    Located {
        location: Location {
            row: 0,
            column: 0,
        },
        end_location: Some(
            Location {
                row: 0,
                column: 0,
            },
        ),
        custom: (),
        node: Constant {
            value: Str(
                "user=",
            ),
            kind: None,
        },
    },
    Located {
        location: Location {
            row: 0,
            column: 0,
        },
        end_location: Some(
            Location {
                row: 0,
                column: 0,
            },
        ),
        custom: (),
        node: Constant {
            value: Str(
                "",
            ),
            kind: None,
        },
    },
    Located {
        location: Location {
            row: 0,
            column: 0,
        },
        end_location: Some(
            Location {
                row: 0,
                column: 0,
            },
        ),
        custom: (),
        node: FormattedValue {
            value: Located {
                location: Location {
                    row: 0,
                    column: 5,
                },
                end_location: Some(
                    Location {
                        row: 0,
                        column: 9,
                    },
                ),
                custom: (),
                node: Name {
                    id: "user",
                    ctx: Load,
                },
            },
            conversion: 114,
            format_spec: None,
        },
    },
    Located {
        location: Location {
            row: 0,
            column: 0,
        },
        end_location: Some(
            Location {
                row: 0,
                column: 0,
            },
        ),
        custom: (),
        node: Constant {
            value: Str(
                " with text and ",
            ),
            kind: None,
        },
    },
    Located {
        location: Location {
            row: 0,
            column: 0,
        },
        end_location: Some(
            Location {
                row: 0,
                column: 0,
            },
        ),
        custom: (),
        node: Constant {
            value: Str(
                "second=",
            ),
            kind: None,
        },
    },
    Located {
        location: Location {
            row: 0,
            column: 0,
        },
        end_location: Some(
            Location {
                row: 0,
                column: 0,
            },
        ),
        custom: (),
        node: Constant {
            value: Str(
                "",
            ),
            kind: None,
        },
    },
    Located {
        location: Location {
            row: 0,
            column: 0,
        },
        end_location: Some(
            Location {
                row: 0,
                column: 0,
            },
        ),
        custom: (),
        node: FormattedValue {
            value: Located {
                location: Location {
                    row: 0,
                    column: 27,
                },
                end_location: Some(
                    Location {
                        row: 0,
                        column: 33,
                    },
                ),
                custom: (),
                node: Name {
                    id: "second",
                    ctx: Load,
                },
            },
            conversion: 114,
            format_spec: None,
        },
    },
]
