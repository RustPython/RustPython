path = "Lib/test/test_os.py"

[FileTests] 
test_closerange = { skipIf = { cond = "sys.platform == 'win32'", reason = "BrokenPipeError: (32, 'The process cannot access the file because it is being used by another process. (os error 32)')" } }

[StatAttributeTests]
test_file_attributes = { expectedFailureIfWindows = { reason = "os.stat return value doesnt have st_file_attributes attribute" } }
test_access_denied = { expectedFailureIfWindows = { reason = "os.stat (PermissionError: [Errno 5] Access is denied" } }
test_stat_block_device = { expectedFailureIfWindows = { reason = "os.stat (PermissionError: [Errno 1] Incorrect function" } }

[UtimeTests]
test_utime = { expectedFailureIfWindows = { reason = "AssertionError: 2.002003 != 1.002003 within 1e-06 delta (1.0000000000000002 difference)" } }
test_utime_directory = { expectedFailureIfWindows = { reason = "(AssertionError: 2.002003 != 1.002003 within 1e-06 delta (1.0000000000000002 difference)" } }
test_utime_current = { expectedFailureIfWindows = { reason = "AssertionError: 3359485824.516508 != 1679742912.516503 within 0.05 delta (1679742912.000005 difference) : st_time=3359485824.516508, current=1679742912.516503, dt=1679742912.000005" } }
test_utime_current_old = { expectedFailureIfWindows = { reason = "AssertionError: 3359485824.5186944 != 1679742912.5186892 within 0.05 delta (1679742912.0000052 difference) : st_time=3359485824.5186944, current=1679742912.5186892, dt=1679742912.0000052" } }
test_utime_nonexistent = { expectedFailure = { reason = "" } }
test_large_time = { expectedFailureIfWindows = { reason = "ModuleNotFoundError: No module named '_ctypes'" } }
test_utime_invalid_arguments = { expectedFailureIfWindows = { reason = "AssertionError: NotImplementedError not raised" } }

[EnvironTests]
test_putenv_unsetenv_error = { expectedFailureIfWindows = { reason = "AssertionError: ValueError not raised by putenv" } }

[BytesWalkTests]
test_compare_to_walk = { expectedFailure = { reason = "TypeError: Can't mix strings and bytes in path components" } }
test_dir_fd = { expectedFailure = { reason = "TypeError: Can't mix strings and bytes in path components" } }
test_yields_correct_dir_fd = { expectedFailure = { reason = "TypeError: Can't mix strings and bytes in path components" } }

[MakedirTests]
test_exist_ok_existing_directory = { expectedFailureIfWindows = { reason = "os.umask not implemented yet for all platforms" } }
test_exist_ok_s_isgid_directory = { expectedFailureIfWindows = { reason = "os.umask not implemented yet for all platforms" } }

[URandomFDTests]
test_urandom_fd_closed = { expectedFailureIfWindows = { reason = "ModuleNotFoundError: No module named 'os'" } }
test_urandom_fd_reopened = { expectedFailureIfWindows = { reason = "ModuleNotFoundError: No module named 'os'" } }

[ExecTests]
test_execvpe_with_bad_arglist = { expectedFailureIfWindows = { reason = "os.execve not implemented yet for all platforms" } }
test_execve_invalid_env = { expectedFailureIfWindows = { reason = "os.execve not implemented yet for all platforms" } }
test_execve_with_empty_path = { expectedFailureIfWindows = { reason = "os.execve not implemented yet for all platforms" } }

[TestInvalidFD]
test_fdopen = { expectedFailure = { reason = "" } }
test_fpathconf = { expectedFailure = { reason = "" } }
test_ftruncate = { expectedFailure = { reason = "" } }
test_lseek = { expectedFailureIfWindows = { reason = "OSError: [Errno 18] There are no more files" } }
test_read = { expectedFailureIfWindows = { reason = "OSError: [Errno 18] There are no more files" } }
test_write = { expectedFailureIfWindows = { reason = "OSError: [Errno 18] There are no more files" } }
test_inheritable = { expectedFailureIfWindows = { reason = "os.get_inheritable not implemented yet for all platforms" } }
test_fchdir = { expectedFailure = { reason = "" } }
test_fsync = { expectedFailure = { reason = "" } }

[Win32KillTests]
test_kill_sigterm = { expectedFailureIfWindows = { reason = "ModuleNotFoundError: No module named '_ctypes'" } }
test_kill_int = { expectedFailureIfWindows = { reason = "ModuleNotFoundError: No module named '_ctypes'" } }
test_CTRL_BREAK_EVENT = { expectedFailure = { reason = "" } }

[Win32JunctionTests]
test_create_junction = { expectedFailureIfWindows = { reason = "AttributeError: module '_winapi' has no attribute 'CreateJunction'" } }
test_unlink_removes_junction = { expectedFailureIfWindows = { reason = "AttributeError: module '_winapi' has no attribute 'CreateJunction'" } }

[Win32NtTests]
test_stat_unlink_race = { expectedFailureIfWindows = { reason = "os.stat PermissionError: [Errno 5] Access is denied" } }

[PidTests]
test_waitpid_windows = { expectedFailureIfWindows = { reason = "os.spawnv not implemented yet for all platforms" } }
test_waitstatus_to_exitcode_windows = { expectedFailureIfWindows = { reason = "OverflowError: Python int too large to convert to Rust i32" } }

[SpawnTests]
test_spawnve_bytes = { expectedFailure = { reason = "fix spawnv bytes" } }

[OSErrorTests]
test_oserror_filename = { expectedFailure = { reason = "AssertionError: b'@test_22106_tmp\\xe7w\\xf0' is not b'@test_22106_tmp\\xe7w\\xf0' : <built-in function chdir>" } }

[FDInheritanceTests]
test_get_set_inheritable = { expectedFailureIfWindows = { reason = "os.get_inheritable not implemented yet for all platforms" } }
test_get_set_inheritable_badf = { expectedFailureIfWindows = { reason = "os.get_inheritable not implemented yet for all platforms" } }
test_open = { expectedFailureIfWindows = { reason = "os.get_inheritable not implemented yet for all platforms" } }
test_dup = { skipIf = { cond = "sys.platform == 'win32'", reason = "os.dup on windows" } }
test_dup_standard_stream = { skipIf = { cond = "sys.platform == 'win32'", reason = "os.dup on windows" } }
test_dup_nul = { expectedFailureIfWindows = { reason = "os.dup not implemented yet for all platforms" } }

[PathTConverterTests]
test_path_t_converter = { expectedFailure = { reason = "AssertionError: TypeError not raised" } }

[TestDirEntry]
test_uninstantiable = { expectedFailure = { reason = "AssertionError: TypeError not raised by DirEntry" } }
test_unpickable = { expectedFailure = { reason = "pickle.PicklingError: Can't pickle <class '_os.DirEntry'>: it's not found as _os.DirEntry" } }

[TestScandir]
test_uninstantiable = { expectedFailure = { reason = "AssertionError: TypeError not raised by ScandirIter" } }
test_attributes = { skipIf = { cond = "sys.platform == 'linux'", reason = "flaky test" } }
test_removed_dir = { expectedFailureIfWindows = { reason = "entry.is_dir() is False" } }
test_removed_file = { expectedFailureIfWindows = { reason = "entry.is_file() is False" } }
test_fd = { expectedFailure = { reason = "" } }
test_empty_path = { expectedFailureIfWindows = { reason = "AssertionError: FileNotFoundError not raised by scandir" } }
test_resource_warning = { expectedFailure = { reason = "" } }

[TestPEP519]
test_pathlike_subclass_slots = { expectedFailure = { reason = "" } }
test_fspath_set_to_None = { expectedFailure = { reason = "" } }

[ForkTests]
test_fork_at_finalization = { expectedFailure = { reason = "" } }
