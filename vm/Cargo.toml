[package]
name = "rustpython-vm"
version = "0.1.2"
description = "Rust Python virtual machine."
authors = ["RustPython Team"]
repository = "https://github.com/RustPython/RustPython"
license = "MIT"
edition = "2021"
include = ["src/**/*.rs", "Cargo.toml", "build.rs", "Lib/**/*.py"]

[features]
default = ["compile-parse", "threading", "pylib"]
vm-tracing-logging = []
flame-it = ["flame", "flamer"]
pylib = ["rustpython-pylib"]
freeze-stdlib = ["rustpython-pylib", "rustpython-pylib/compiled-bytecode"]
jit = ["rustpython-jit"]
threading = ["rustpython-common/threading"]
compile-parse = ["parser", "compiler"]
ast = ["rustpython-ast"]
compiler = ["rustpython-compiler", "rustpython-compiler-core", "ast"]
parser = ["rustpython-parser", "ast"]

[dependencies]
num-complex = { version = "0.4.0", features = ["serde"] }
num-bigint = { version = "0.4.2", features = ["serde"] }
num-traits = "0.2.8"
num-integer = "0.1.41"
num-rational = "0.4.0"
rustpython-common = { path = "../common" }
rustpython-derive = { path = "../derive", version = "0.1.2" }
rustpython-ast = { path = "../ast", optional = true, version = "0.1" }
rustpython-parser = { path = "../parser", optional = true, version = "0.1.2" }
rustpython-compiler = { path = "../compiler/porcelain", optional = true, version = "0.1.2" }
rustpython-compiler-core = { path = "../compiler", optional = true, version = "0.1.2" }
rustpython-bytecode = { path = "../bytecode", version = "0.1.2" }
rustpython-jit = { path = "../jit", optional = true, version = "0.1.2" }
rustpython-pylib = { path = "pylib-crate", optional = true, version = "0.1.0" }
rand = "0.8"
getrandom = { version = "0.2", features = ["js"] }
log = "0.4"
serde = { version = "1.0.66", features = ["derive"] }
caseless = "0.2.1"
chrono = { version = "0.4", features = ["wasmbind"] }
itertools = "0.10.0"
hex = "0.4.0"
hexf-parse = "0.2.1"
indexmap = "1.0.2"
ahash = "0.7.2"
bitflags = "1.3"
libc = "0.2.99"
nix = "0.23"
paste = "1.0.5"
is-macro = "0.1"
result-like = "0.4.2"
num_enum = "0.5"
bstr = "0.2.12"
crossbeam-utils = "0.8"
parking_lot = "0.11"
thread_local = "1.0"
cfg-if = "1.0"
timsort = "0.1"
thiserror = "1.0"
atty = "0.2"
static_assertions = "1.1"
half = "1.6"
memchr = "2"
adler32 = "1.0.3"
flate2 = "1.0.20"
once_cell = "1"
memoffset = "0.6"
optional = "0.5"

# RustPython crates implementing functionality based on CPython
sre-engine = "0.1.2"
# to work on sre-engine locally
# sre-engine = { path = "../../sre-engine" }

## unicode stuff
unicode_names2 = "0.4"
# TODO: use unic for this; needed for title case:
# https://github.com/RustPython/RustPython/pull/832#discussion_r275428939
unicode-casing = "0.1"
# update version all at the same time
unic-ucd-bidi      = "0.9"
unic-ucd-category  = "0.9"
unic-ucd-ident     = "0.9"

flame = { version = "0.2", optional = true }
flamer = { version = "0.4", optional = true }

ascii = "1.0.0"

[target.'cfg(unix)'.dependencies]
exitcode = "1.1.2"
uname = "0.1.1"
strum = "0.21"
strum_macros = "0.21"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
rustyline = "9"
which = "4.0"

[target.'cfg(any(not(target_arch = "wasm32"), target_os = "wasi"))'.dependencies]
num_cpus = "1"

[target.'cfg(windows)'.dependencies]
winreg = "0.10.1"
schannel = "0.1"
widestring = "0.4"

[target.'cfg(windows)'.dependencies.winapi]
version = "0.3"
features = [
  "winsock2", "handleapi", "ws2def", "std", "winbase", "wincrypt", "fileapi", "processenv",
  "namedpipeapi", "winnt", "processthreadsapi", "errhandlingapi", "winuser", "synchapi", "wincon",
  "impl-default", "vcruntime", "ifdef", "netioapi"
]

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"

[build-dependencies]
itertools = "0.10.0"
rustc_version = "0.4"
