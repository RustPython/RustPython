[package]
name = "rustpython-vm"
version = "0.1.2"
description = "Rust Python virtual machine."
authors = ["RustPython Team"]
repository = "https://github.com/RustPython/RustPython"
license = "MIT"
edition = "2021"
include = ["src/**/*.rs", "Cargo.toml", "build.rs", "Lib/**/*.py"]

[features]
default = ["compiler"]
importlib = []
encodings = ["importlib"]
vm-tracing-logging = []
flame-it = ["flame", "flamer"]
freeze-stdlib = []
jit = ["rustpython-jit"]
threading = ["rustpython-common/threading"]
compiler = ["parser", "codegen", "rustpython-compiler"]
ast = ["rustpython-ast"]
codegen = ["rustpython-codegen", "ast"]
parser = ["rustpython-parser", "ast"]

[dependencies]
rustpython-compiler = { path = "../compiler", optional = true, version = "0.1.2" }
rustpython-ast = { path = "../compiler/ast", optional = true, version = "0.1" }
rustpython-parser = { path = "../compiler/parser", optional = true, version = "0.1.2" }
rustpython-codegen = { path = "../compiler/codegen", optional = true, version = "0.1.2" }
rustpython-compiler-core = { path = "../compiler/core", version = "0.1.2" }
rustpython-common = { path = "../common" }
rustpython-derive = { path = "../derive", version = "0.1.2" }
rustpython-jit = { path = "../jit", optional = true, version = "0.1.2" }

num-complex = { version = "0.4.0", features = ["serde"] }
num-bigint = { version = "0.4.3", features = ["serde"] }
num-traits = "0.2.14"
num-integer = "0.1.44"
num-rational = "0.4.0"
rand = "0.8.5"
getrandom = { version = "0.2.6", features = ["js"] }
log = "0.4.16"
serde = { version = "1.0.136", features = ["derive"] }
caseless = "0.2.1"
chrono = { version = "0.4.19", features = ["wasmbind"] }
itertools = "0.10.3"
hex = "0.4.3"
hexf-parse = "0.2.1"
indexmap = "1.8.1"
ahash = "0.7.6"
bitflags = "1.3.2"
libc = "0.2.133"
nix = "0.24.2"
paste = "1.0.7"
is-macro = "0.2.0"
result-like = "0.4.5"
num_enum = "0.5.7"
bstr = "0.2.17"
crossbeam-utils = "=0.8.9"
parking_lot = "0.12.0"
thread_local = "1.1.4"
cfg-if = "1.0.0"
timsort = "0.1.2"
thiserror = "1.0"
atty = "0.2.14"
static_assertions = "1.1.0"
half = "1.8.2"
memchr = "2.4.1"
adler32 = "1.2.0"
flate2 = "1.0.23"
once_cell = "1.10.0"
memoffset = "0.6.5"
optional = "0.5.0"

# RustPython crates implementing functionality based on CPython
sre-engine = "0.4.1"
# to work on sre-engine locally or git version
# sre-engine = { git = "https://github.com/RustPython/sre-engine", rev = "refs/pull/14/head" }
# sre-engine = { git = "https://github.com/RustPython/sre-engine" }
# sre-engine = { path = "../../sre-engine" }

## unicode stuff
unicode_names2 = "0.5.1"
# TODO: use unic for this; needed for title case:
# https://github.com/RustPython/RustPython/pull/832#discussion_r275428939
unicode-casing = "0.1.0"
# update version all at the same time
unic-ucd-bidi      = "0.9.0"
unic-ucd-category  = "0.9.0"
unic-ucd-ident     = "0.9.0"

flame = { version = "0.2", optional = true }
flamer = { version = "0.4", optional = true }

ascii = "1.0.0"

[target.'cfg(unix)'.dependencies]
exitcode = "1.1.2"
uname = "0.1.1"
strum = "0.24.0"
strum_macros = "0.24.0"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
rustyline = "10.0.0"
which = "4.2.5"

[target.'cfg(any(not(target_arch = "wasm32"), target_os = "wasi"))'.dependencies]
num_cpus = "1.13.1"

[target.'cfg(windows)'.dependencies]
winreg = "0.10.1"
schannel = "0.1.19"
widestring = "0.5.1"

[target.'cfg(windows)'.dependencies.windows]
version = "0.39.0"
features = [
  "Win32_UI_Shell", "Win32_System_LibraryLoader", "Win32_Foundation"
]

[target.'cfg(windows)'.dependencies.winapi]
version = "0.3.9"
features = [
  "winsock2", "handleapi", "ws2def", "std", "winbase", "wincrypt", "fileapi", "processenv",
  "namedpipeapi", "winnt", "processthreadsapi", "errhandlingapi", "winuser", "synchapi", "wincon",
  "impl-default", "vcruntime", "ifdef", "netioapi", "memoryapi",
]

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2.80"

[build-dependencies]
itertools = "0.10.3"
rustc_version = "0.4.0"
glob = "0.3"
