[package]
name = "rustpython-stdlib"
version = "0.1.2"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
threading = ["rustpython-common/threading", "rustpython-vm/threading"]
zlib = ["libz-sys", "flate2/zlib"]
bz2 = ["bzip2"]
ssl = ["openssl", "openssl-sys", "foreign-types-shared"]
ssl-vendor = ["ssl", "openssl/vendored", "openssl-probe"]

[dependencies]
# rustpython crates
rustpython-derive = { path = "../derive" }
rustpython-vm = { path = "../vm" }
rustpython-common = { path = "../common" }

# random
rand = "0.8.5"
rand_core = "0.6.3"
mt19937 = "2.0.1"

# Crypto:
digest = "0.10.3"
md-5 = "0.10.1"
sha-1 = "0.10.0"
sha2 = "0.10.2"
sha3 = "0.10.1"
blake2 = "0.10.4"

## unicode stuff
unicode_names2 = "0.5.0"
# TODO: use unic for this; needed for title case:
# https://github.com/RustPython/RustPython/pull/832#discussion_r275428939
unicode-casing = "0.1.0"
# update version all at the same time
unic-char-property = "0.9.0"
unic-normal        = "0.9.0"
unic-ucd-bidi      = "0.9.0"
unic-ucd-category  = "0.9.0"
unic-ucd-age       = "0.9.0"
unic-ucd-ident     = "0.9.0"

# compression
adler32 = "1.2.0"
crc32fast = "1.3.2"
flate2 = "1.0.23"
bzip2 = { version = "0.4", optional = true }

num-complex = "0.4.0"
num-bigint = "0.4.3"
num-integer = "0.1.44"
num-rational = "0.4.1"

crossbeam-utils = "0.8.9"
itertools = "0.10.3"
lexical-parse-float = "0.8.3"
num-traits = "0.2.14"
memchr = "2.4.1"
base64 = "0.13.0"
csv-core = "0.1.10"
hex = "0.4.3"
puruspe = "0.1.5"
nix = "0.24"
xml-rs = "0.8.4"
libc = "0.2.133"
cfg-if = "1.0.0"
ahash = "0.7.6"
libz-sys = { version = "1.1.5", optional = true }
num_enum = "0.5.7"
ascii = "1.0.0"
parking_lot = "0.12.0"
once_cell = "1.13.0"

# uuid
[target.'cfg(not(any(target_os = "ios", target_os = "android", target_os = "windows", target_arch = "wasm32")))'.dependencies]
mac_address = "1.1.3"
uuid = { version = "1.1.2", features = ["v1", "fast-rng", "macro-diagnostics"] }

# mmap
[target.'cfg(all(unix, not(target_arch = "wasm32")))'.dependencies]
memmap2 = "0.5.4"
page_size = "0.4"

[target.'cfg(all(unix, not(target_os = "redox"), not(target_os = "ios")))'.dependencies]
termios = "0.3.3"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
gethostname = "0.2.3"
socket2 = { version = "0.4.4", features = ["all"] }
dns-lookup = "1.0.8"
openssl = { version = "0.10.43", optional = true }
openssl-sys = { version = "0.9.72", optional = true }
openssl-probe = { version = "0.1.5", optional = true }
foreign-types-shared = { version = "0.1.1", optional = true }

[target.'cfg(windows)'.dependencies]
schannel = "0.1.19"
widestring = "0.5.1"
paste = "1.0.7"

[target.'cfg(windows)'.dependencies.winapi]
version = "0.3.9"
features = [
  "winsock2", "handleapi", "ws2def", "std", "winbase", "wincrypt", "fileapi", "processenv",
  "namedpipeapi", "winnt", "processthreadsapi", "errhandlingapi", "winuser", "synchapi", "wincon",
  "impl-default", "vcruntime", "ifdef", "netioapi"
]

[target.'cfg(target_os = "macos")'.dependencies]
system-configuration = "0.5.0"
